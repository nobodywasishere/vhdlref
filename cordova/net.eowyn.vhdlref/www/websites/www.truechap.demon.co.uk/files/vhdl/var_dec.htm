<HTML>
<HEAD>
<TITLE>VHDL Reference Guide - Variable Declaration</TITLE>
</HEAD>
<BODY BGCOLOR="mintcream">

<a href="use.htm"><img border=0 src="../../images/left.gif" align=left></a>
<a href="var_ass.htm"><img border=0 src="../../images/right.gif"align=right></a>

<DIV ALIGN=CENTER>
<TABLE BORDER=0 CELLPADDING=5>
<CAPTION><B>Variable Declaration</B></CAPTION>
<TR><TD COLSPAN=3><HR></TD></TR>
<TR>
<TD BGCOLOR="lightcyan">Declaration</TD>
<TD>---- used in ----></TD>
<TD BGCOLOR="lightgreen">Process<br>Procedure<br>Function</TD>
</TR>
</TABLE>

<P><TABLE BORDER=0>
<TR><TD><HR width=150></TD><TD>Syntax</TD><TD><HR width=150></TD></TR>
</TABLE><P>
</DIV>

<DIV ALIGN=CENTER>
<TABLE BORDER=1 CELLPADDING=5 WIDTH=40%>
<TR><TD><PRE>variable variable_name : type;</PRE></TD></TR>
<TR><TD></TD></TR>
<TR><TD><PRE>variable variable_name : type := initial_value;</PRE></TD>
</TR>
</TABLE><P>
</DIV>



<DIV ALIGN=CENTER>
See LRM section 4.3.1.3

<P><TABLE BORDER=0 align=center>
<TR><TD><HR width=150></TD><TD>Rules and Examples</TD><TD><HR width=150></TD></TR>
</TABLE><P>
</DIV>

<DIV ALIGN=left>
<TABLE BORDER=1 CELLPADDING=5 WIDTH=60%>
<TR>
<TD><PRE>variable HEIGHT : integer := 8;
variable COND : boolean := true;
variable IN_STRING : string(1 to 80);
variable M,N : bit := '1';
variable I : integer range 0 to 3;
variable MAKE_FRAME_STATE :
    T_MAKE_FRAME_STATE := RCV_HIGH;</PRE></TD>
</TR>
</TABLE><P>
</DIV>

<DIV ALIGN=right>
<TABLE BORDER=1 CELLPADDING=5 WIDTH=60%>
<TR>
<TD>A Variable may be given an explicit initial value when it is
declared. If a variable is not given an explicit value, it's default
value will be the leftmost value (<b>'left</b>) of its declared type.
<PRE>variable I : integer range 0 to 3;
-- initial value of I is 0
variable X : std_ulogic;
-- initial value of X is 'U'</PRE></TD>
</TR>
</TABLE><P>
</DIV>

<DIV ALIGN=center>
<TABLE BORDER=1 CELLPADDING=5 WIDTH=80%>
<TR>
<TD>Variables within subprograms (functions and procedures) are
initialised each time the subprogram is called:
<PRE>function PARITY (X : std_ulogic_vector)
                 return std_ulogic is
  variable TMP : std_ulogic := '0';
begin
  for J in X'range loop
    TMP := TMP xor X(J);
  end loop; --no need to initialise TMP
  return TMP;
end PARITY;</PRE></TD>
</TR>
</TABLE><P>
</DIV>

<DIV ALIGN=center>
<TABLE BORDER=1 CELLPADDING=5 WIDTH=70%>
<TR>
<TD>Variables in processes, except for "FOR LOOP" variables, receive
their initial values at the start of the simulation time (time = 0 ns)
<PRE>process (A)
   variable TMP : std_ulogic := '0';
begin
   TMP := '0';
   -- in this example we need to reset
   -- TMP to '0' each time the process 
   -- is activated
   for I in A'low to A'high loop
      TMP := TMP xor A(I);
   end loop;
   ODD <= TMP;
end process;
</PRE></TD>
</TR>
</TABLE><P>
</DIV>

<DIV ALIGN=CENTER>
<P><TABLE BORDER=0 align=center>
<TR><TD><HR width=150></TD><TD>Synthesis Issues</TD><TD><HR width=150></TD></TR>
</TABLE><P>
</DIV>

<DIV ALIGN=CENTER>
<TABLE BORDER=0 CELLPADDING=5 WIDTH=70%>
<TR>
<TD>Variables are supported for synthesis, providing they are of a type
acceptable to the logic synthesis tool.
<p>
In a "clocked process", each variable which has its value read before it
has had an assignment to it will be synthesised as the output of a
register.
<p>
In a "combinational process", reading a variable before it has had an
assignment may cause a latch to be synthesised.
<p>
Variables declared in a subprogram are synthesised as combinational
logic.
</TD>
</TR>
</TABLE><P>
</DIV>



<DIV ALIGN=CENTER>
<P><TABLE BORDER=0>
<TR><TD><HR width=150></TD><TD>Whats New in '93</TD><TD><HR width=150></TD></TR>
</TABLE><P>

In VHDL-93, <b>shared variables</b> may be declared within an
architecture, block, generate statement, or package:
<pre><b>shared variable</b> variable_name : type;</pre>
Shared variables may be accessed by more than one process. However, the
language does not define what happens if two or more processes make
conflicting accesses to a shared variable at the same time.

</DIV>

<HR WIDTH="80%">
<div align=center>
<a href="use.htm"><img border=0 src="../../images/left.gif"></a>
<a href="index.htm"><img border=0 src="../../images/up.gif"></a>
<a href="var_ass.htm"><img border=0 src="../../images/right.gif"></a>
</div>

<HR WIDTH="80%">
<ADDRESS>
<CENTER>
This page maintained by <A HREF="mailto:dave@truechap.demon.co.uk">
<IMG SRC="/images/emailed.gif" BORDER=0>
Dave Trueman</A>
</CENTER>
</ADDRESS>
<HR WIDTH="80%">
</BODY>
</HTML>
